(function(root,factory){if(typeof define==='function'&&define.amd){define(['jquery'],factory)}else if(root.mainApp.controller){root.mainApp.controller.module=factory(mainApp.controller,window.jQuery||window.$)}else if(root.mainApp){root.mainApp.controller=factory(mainApp,window.jQuery||window.$)}else{console.error('Main application was not loaded')}}(typeof self!=='undefined'?self:this,function(parent,$){'use strict';const dataModel={'id':0,};const SITUATION_WAITING=0;const SITUATION_SENT=1;const actApprove=$('[data-form-action="approve"]');const actCancel=$('[data-form-action="cancel"]');const actDone=$('[data-form-action="done"]');const inpId=$('#record-id');let currentRecord=$.objectNormalizer(dataModel,dataModel);const callOrderAction=(command,message,log=null)=>{const recId=currentRecord.id||!1;if(!recId){return}
mainApp.ajax({url:`orders/${recId}/${command}`,method:'PUT',data:{'log':log,},dataType:'json',success:()=>{resetRecord();window.location.hash=`#${recId}`;$.success(`Pedido ${message} com sucesso.`)},error:()=>history.back()})};const confirmInputLog=()=>{return'<br><br><form action="" class="formName">'+'<div class="form-group has-float-label no-margin">'+'</div>'+'</form>'};const confirmOrderApprove=()=>{if(!isOrderApprovable()){$.error('Pedido não pode ser aprovado.');history.back();return}
$.confirmDialog({title:'Aprovação',content:`Confirma a aprovação manual do pedido<br><b>${currentRecord.id}</b>?${confirmInputLog()}`,action:function(){callOrderAction('approve','enviado')}})};const confirmOrderDone=()=>{if(!isOrderDone()){$.error('Pedido não pode ser enviado.');history.back();return}
$.confirmDialog({title:'Aprovação',content:`Confirma a aprovação manual do pedido<br><b>${currentRecord.id}</b>?${confirmInputLog()}`,action:function(){callOrderAction('done','enviado')}})};const confirmOrderCancel=()=>{if(!isOrderCancelable()){$.error('Pedido não pode ser cancelado.');history.back();return}
$.confirmDialog({title:'Cancelamento',content:`Confirma o cancelamento do pedido<br><b>${currentRecord.id}</b>?${confirmInputLog()}`,action:function(){callOrderAction('cancel','cancelado')},})};const isOrderApprovable=()=>{return parseInt(currentRecord.situation,10)===SITUATION_WAITING};const isOrderDone=()=>{return parseInt(currentRecord.situation,10)===SITUATION_SENT};const isOrderCancelable=()=>{const cancelables=[SITUATION_WAITING,SITUATION_SENT];const current=parseInt(currentRecord.situation,10);return cancelables.includes(current)};const resetRecord=()=>{setRecord(dataModel)};const setRecord=data=>{currentRecord=$.objectNormalizer(data,dataModel)};const showFormData=()=>{inpId.text(currentRecord.id);$(tblProducts.table().body()).empty();$('#user-id').val(currentRecord.user_name);$('#situation').val(parent.orderReferralText(currentRecord.situation));$('#total-value').val($.brlFormat(currentRecord.total_value));$('#payment').val(parent.orderPaymentText(currentRecord.payment));$('#address').val(currentRecord.address+', '+currentRecord.number);tblProducts.draw()};const tblProducts=$('#order-products').setDataTable({ajax:{url:'order-products',method:'GET',data:data=>{data.filter={'order_id':currentRecord.id}}},columns:[{data:'id',className:'text-right',render:(data,type,row)=>{if(type!=='display'){return data}
return htmlLink({href:`products#${row.id}`,text:data})},width:'1%',},{data:'product_name',className:'text-right',render:(data,type,row)=>{if(type!=='display'){return data}
return htmlLink({href:`products#${row.id}`,text:data||'[ produto sem nome ]'})},width:'1%',},{data:'quantity',className:'text-right',width:'1%',},{data:'unit_price',className:'text-right',render:$.brlFormat,width:'1%',},{data:'observations',className:'text-right',},],order:[]}).on('draw',()=>{deleteOverlay('#box-products')}).on('processing',(e,settings,processing)=>{if(processing){addOverlay('#box-products')}});return{actions:{'approve':confirmOrderApprove,'cancel':confirmOrderCancel,'done':confirmOrderDone,},currentRecord:()=>currentRecord,dataTableObj:{ajax:{url:'orders',method:'GET',},columns:[{data:'situation',className:'text-center',render:parent.orderSituationIcon,width:'1%'},{data:'id',className:'text-nowrap',render:(data,type,row)=>{if(type!=='display'){return data}
return htmlLink({href:`#${row.id}`,text:data})},type:'html',width:'1%'},{data:'user_name',className:'text-nowrap',type:'html',width:'1%'},{data:'total_value',className:'text-nowrap',render:$.brlFormat,type:'html',width:'1%'},{data:null,className:'text-nowrap',render:(data)=>{return data.address+', '+data.number},type:'html',width:'1%'},],order:[],stateSave:!0,},fillDetails:showFormData,formCommandsToggler:()=>{actApprove.toggle(isOrderApprovable());actCancel.toggle(isOrderCancelable());actDone.toggle(isOrderDone())},getRecord:(rowId,callback)=>{mainApp.ajax({url:`orders/${rowId}`,method:'GET',data:{},success:result=>{setRecord(result);callback()},error:()=>{location.hash=''}})},isFiltering:()=>{},resetRecord:resetRecord,resetFilter:()=>{},sidebarSearchForm:search=>{},init:()=>{}}}))